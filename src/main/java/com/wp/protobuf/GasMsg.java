package com.wp.protobuf;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GasMsg.proto

public final class GasMsg {
  private GasMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GasDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    int getId();

    // required float pressure = 2;
    /**
     * <code>required float pressure = 2;</code>
     *
     * <pre>
     * 压力
     * </pre>
     */
    boolean hasPressure();
    /**
     * <code>required float pressure = 2;</code>
     *
     * <pre>
     * 压力
     * </pre>
     */
    float getPressure();

    // required float temper = 3;
    /**
     * <code>required float temper = 3;</code>
     *
     * <pre>
     * 温度
     * </pre>
     */
    boolean hasTemper();
    /**
     * <code>required float temper = 3;</code>
     *
     * <pre>
     * 温度
     * </pre>
     */
    float getTemper();

    // required float sFlow = 4;
    /**
     * <code>required float sFlow = 4;</code>
     *
     * <pre>
     * 标况流量
     * </pre>
     */
    boolean hasSFlow();
    /**
     * <code>required float sFlow = 4;</code>
     *
     * <pre>
     * 标况流量
     * </pre>
     */
    float getSFlow();

    // required float wFlow = 5;
    /**
     * <code>required float wFlow = 5;</code>
     *
     * <pre>
     * 工作流量
     * </pre>
     */
    boolean hasWFlow();
    /**
     * <code>required float wFlow = 5;</code>
     *
     * <pre>
     * 工作流量
     * </pre>
     */
    float getWFlow();

    // required float aFlow = 6;
    /**
     * <code>required float aFlow = 6;</code>
     *
     * <pre>
     * 总流量
     * </pre>
     */
    boolean hasAFlow();
    /**
     * <code>required float aFlow = 6;</code>
     *
     * <pre>
     * 总流量
     * </pre>
     */
    float getAFlow();

    // required int64 time = 7;
    /**
     * <code>required int64 time = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required int64 time = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    long getTime();
  }
  /**
   * Protobuf type {@code GasData}
   */
  public static final class GasData extends
      com.google.protobuf.GeneratedMessage
      implements GasDataOrBuilder {
    // Use GasData.newBuilder() to construct.
    private GasData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GasData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GasData defaultInstance;
    public static GasData getDefaultInstance() {
      return defaultInstance;
    }

    public GasData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GasData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              pressure_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              temper_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              sFlow_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              wFlow_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              aFlow_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              time_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GasMsg.internal_static_GasData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GasMsg.internal_static_GasData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GasData.class, Builder.class);
    }

    public static com.google.protobuf.Parser<GasData> PARSER =
        new com.google.protobuf.AbstractParser<GasData>() {
      public GasData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GasData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GasData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required float pressure = 2;
    public static final int PRESSURE_FIELD_NUMBER = 2;
    private float pressure_;
    /**
     * <code>required float pressure = 2;</code>
     *
     * <pre>
     * 压力
     * </pre>
     */
    public boolean hasPressure() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float pressure = 2;</code>
     *
     * <pre>
     * 压力
     * </pre>
     */
    public float getPressure() {
      return pressure_;
    }

    // required float temper = 3;
    public static final int TEMPER_FIELD_NUMBER = 3;
    private float temper_;
    /**
     * <code>required float temper = 3;</code>
     *
     * <pre>
     * 温度
     * </pre>
     */
    public boolean hasTemper() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float temper = 3;</code>
     *
     * <pre>
     * 温度
     * </pre>
     */
    public float getTemper() {
      return temper_;
    }

    // required float sFlow = 4;
    public static final int SFLOW_FIELD_NUMBER = 4;
    private float sFlow_;
    /**
     * <code>required float sFlow = 4;</code>
     *
     * <pre>
     * 标况流量
     * </pre>
     */
    public boolean hasSFlow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float sFlow = 4;</code>
     *
     * <pre>
     * 标况流量
     * </pre>
     */
    public float getSFlow() {
      return sFlow_;
    }

    // required float wFlow = 5;
    public static final int WFLOW_FIELD_NUMBER = 5;
    private float wFlow_;
    /**
     * <code>required float wFlow = 5;</code>
     *
     * <pre>
     * 工作流量
     * </pre>
     */
    public boolean hasWFlow() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float wFlow = 5;</code>
     *
     * <pre>
     * 工作流量
     * </pre>
     */
    public float getWFlow() {
      return wFlow_;
    }

    // required float aFlow = 6;
    public static final int AFLOW_FIELD_NUMBER = 6;
    private float aFlow_;
    /**
     * <code>required float aFlow = 6;</code>
     *
     * <pre>
     * 总流量
     * </pre>
     */
    public boolean hasAFlow() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float aFlow = 6;</code>
     *
     * <pre>
     * 总流量
     * </pre>
     */
    public float getAFlow() {
      return aFlow_;
    }

    // required int64 time = 7;
    public static final int TIME_FIELD_NUMBER = 7;
    private long time_;
    /**
     * <code>required int64 time = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int64 time = 7;</code>
     *
     * <pre>
     *日期
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    private void initFields() {
      id_ = 0;
      pressure_ = 0F;
      temper_ = 0F;
      sFlow_ = 0F;
      wFlow_ = 0F;
      aFlow_ = 0F;
      time_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPressure()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTemper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSFlow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWFlow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAFlow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, pressure_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, temper_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, sFlow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, wFlow_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, aFlow_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, pressure_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, temper_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, sFlow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, wFlow_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, aFlow_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GasData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GasData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GasData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GasData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GasData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GasData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GasData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GasData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GasData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GasData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GasData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GasData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GasDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GasMsg.internal_static_GasData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GasMsg.internal_static_GasData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GasData.class, Builder.class);
      }

      // Construct using GasMsg.GasData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pressure_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        temper_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        sFlow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        wFlow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        aFlow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GasMsg.internal_static_GasData_descriptor;
      }

      public GasData getDefaultInstanceForType() {
        return GasData.getDefaultInstance();
      }

      public GasData build() {
        GasData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GasData buildPartial() {
        GasData result = new GasData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pressure_ = pressure_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.temper_ = temper_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sFlow_ = sFlow_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.wFlow_ = wFlow_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.aFlow_ = aFlow_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GasData) {
          return mergeFrom((GasData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GasData other) {
        if (other == GasData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPressure()) {
          setPressure(other.getPressure());
        }
        if (other.hasTemper()) {
          setTemper(other.getTemper());
        }
        if (other.hasSFlow()) {
          setSFlow(other.getSFlow());
        }
        if (other.hasWFlow()) {
          setWFlow(other.getWFlow());
        }
        if (other.hasAFlow()) {
          setAFlow(other.getAFlow());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasPressure()) {
          
          return false;
        }
        if (!hasTemper()) {
          
          return false;
        }
        if (!hasSFlow()) {
          
          return false;
        }
        if (!hasWFlow()) {
          
          return false;
        }
        if (!hasAFlow()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GasData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GasData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required float pressure = 2;
      private float pressure_ ;
      /**
       * <code>required float pressure = 2;</code>
       *
       * <pre>
       * 压力
       * </pre>
       */
      public boolean hasPressure() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float pressure = 2;</code>
       *
       * <pre>
       * 压力
       * </pre>
       */
      public float getPressure() {
        return pressure_;
      }
      /**
       * <code>required float pressure = 2;</code>
       *
       * <pre>
       * 压力
       * </pre>
       */
      public Builder setPressure(float value) {
        bitField0_ |= 0x00000002;
        pressure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float pressure = 2;</code>
       *
       * <pre>
       * 压力
       * </pre>
       */
      public Builder clearPressure() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pressure_ = 0F;
        onChanged();
        return this;
      }

      // required float temper = 3;
      private float temper_ ;
      /**
       * <code>required float temper = 3;</code>
       *
       * <pre>
       * 温度
       * </pre>
       */
      public boolean hasTemper() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float temper = 3;</code>
       *
       * <pre>
       * 温度
       * </pre>
       */
      public float getTemper() {
        return temper_;
      }
      /**
       * <code>required float temper = 3;</code>
       *
       * <pre>
       * 温度
       * </pre>
       */
      public Builder setTemper(float value) {
        bitField0_ |= 0x00000004;
        temper_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float temper = 3;</code>
       *
       * <pre>
       * 温度
       * </pre>
       */
      public Builder clearTemper() {
        bitField0_ = (bitField0_ & ~0x00000004);
        temper_ = 0F;
        onChanged();
        return this;
      }

      // required float sFlow = 4;
      private float sFlow_ ;
      /**
       * <code>required float sFlow = 4;</code>
       *
       * <pre>
       * 标况流量
       * </pre>
       */
      public boolean hasSFlow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float sFlow = 4;</code>
       *
       * <pre>
       * 标况流量
       * </pre>
       */
      public float getSFlow() {
        return sFlow_;
      }
      /**
       * <code>required float sFlow = 4;</code>
       *
       * <pre>
       * 标况流量
       * </pre>
       */
      public Builder setSFlow(float value) {
        bitField0_ |= 0x00000008;
        sFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float sFlow = 4;</code>
       *
       * <pre>
       * 标况流量
       * </pre>
       */
      public Builder clearSFlow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sFlow_ = 0F;
        onChanged();
        return this;
      }

      // required float wFlow = 5;
      private float wFlow_ ;
      /**
       * <code>required float wFlow = 5;</code>
       *
       * <pre>
       * 工作流量
       * </pre>
       */
      public boolean hasWFlow() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float wFlow = 5;</code>
       *
       * <pre>
       * 工作流量
       * </pre>
       */
      public float getWFlow() {
        return wFlow_;
      }
      /**
       * <code>required float wFlow = 5;</code>
       *
       * <pre>
       * 工作流量
       * </pre>
       */
      public Builder setWFlow(float value) {
        bitField0_ |= 0x00000010;
        wFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wFlow = 5;</code>
       *
       * <pre>
       * 工作流量
       * </pre>
       */
      public Builder clearWFlow() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wFlow_ = 0F;
        onChanged();
        return this;
      }

      // required float aFlow = 6;
      private float aFlow_ ;
      /**
       * <code>required float aFlow = 6;</code>
       *
       * <pre>
       * 总流量
       * </pre>
       */
      public boolean hasAFlow() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float aFlow = 6;</code>
       *
       * <pre>
       * 总流量
       * </pre>
       */
      public float getAFlow() {
        return aFlow_;
      }
      /**
       * <code>required float aFlow = 6;</code>
       *
       * <pre>
       * 总流量
       * </pre>
       */
      public Builder setAFlow(float value) {
        bitField0_ |= 0x00000020;
        aFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float aFlow = 6;</code>
       *
       * <pre>
       * 总流量
       * </pre>
       */
      public Builder clearAFlow() {
        bitField0_ = (bitField0_ & ~0x00000020);
        aFlow_ = 0F;
        onChanged();
        return this;
      }

      // required int64 time = 7;
      private long time_ ;
      /**
       * <code>required int64 time = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 time = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required int64 time = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000040;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 time = 7;</code>
       *
       * <pre>
       *日期
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        time_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GasData)
    }

    static {
      defaultInstance = new GasData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GasData)
  }

  public interface GasDataBoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .GasData gasData = 1;
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    java.util.List<GasData>
        getGasDataList();
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    GasData getGasData(int index);
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    int getGasDataCount();
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    java.util.List<? extends GasDataOrBuilder>
        getGasDataOrBuilderList();
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    GasDataOrBuilder getGasDataOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code GasDataBox}
   */
  public static final class GasDataBox extends
      com.google.protobuf.GeneratedMessage
      implements GasDataBoxOrBuilder {
    // Use GasDataBox.newBuilder() to construct.
    private GasDataBox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GasDataBox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GasDataBox defaultInstance;
    public static GasDataBox getDefaultInstance() {
      return defaultInstance;
    }

    public GasDataBox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GasDataBox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                gasData_ = new java.util.ArrayList<GasData>();
                mutable_bitField0_ |= 0x00000001;
              }
              gasData_.add(input.readMessage(GasData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          gasData_ = java.util.Collections.unmodifiableList(gasData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GasMsg.internal_static_GasDataBox_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GasMsg.internal_static_GasDataBox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GasDataBox.class, Builder.class);
    }

    public static com.google.protobuf.Parser<GasDataBox> PARSER =
        new com.google.protobuf.AbstractParser<GasDataBox>() {
      public GasDataBox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GasDataBox(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GasDataBox> getParserForType() {
      return PARSER;
    }

    // repeated .GasData gasData = 1;
    public static final int GASDATA_FIELD_NUMBER = 1;
    private java.util.List<GasData> gasData_;
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    public java.util.List<GasData> getGasDataList() {
      return gasData_;
    }
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    public java.util.List<? extends GasDataOrBuilder>
        getGasDataOrBuilderList() {
      return gasData_;
    }
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    public int getGasDataCount() {
      return gasData_.size();
    }
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    public GasData getGasData(int index) {
      return gasData_.get(index);
    }
    /**
     * <code>repeated .GasData gasData = 1;</code>
     */
    public GasDataOrBuilder getGasDataOrBuilder(
        int index) {
      return gasData_.get(index);
    }

    private void initFields() {
      gasData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getGasDataCount(); i++) {
        if (!getGasData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < gasData_.size(); i++) {
        output.writeMessage(1, gasData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < gasData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, gasData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GasDataBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GasDataBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GasDataBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GasDataBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GasDataBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GasDataBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GasDataBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GasDataBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GasDataBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GasDataBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GasDataBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GasDataBox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GasDataBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GasMsg.internal_static_GasDataBox_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GasMsg.internal_static_GasDataBox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GasDataBox.class, Builder.class);
      }

      // Construct using GasMsg.GasDataBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGasDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gasDataBuilder_ == null) {
          gasData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          gasDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GasMsg.internal_static_GasDataBox_descriptor;
      }

      public GasDataBox getDefaultInstanceForType() {
        return GasDataBox.getDefaultInstance();
      }

      public GasDataBox build() {
        GasDataBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GasDataBox buildPartial() {
        GasDataBox result = new GasDataBox(this);
        int from_bitField0_ = bitField0_;
        if (gasDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            gasData_ = java.util.Collections.unmodifiableList(gasData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.gasData_ = gasData_;
        } else {
          result.gasData_ = gasDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GasDataBox) {
          return mergeFrom((GasDataBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GasDataBox other) {
        if (other == GasDataBox.getDefaultInstance()) return this;
        if (gasDataBuilder_ == null) {
          if (!other.gasData_.isEmpty()) {
            if (gasData_.isEmpty()) {
              gasData_ = other.gasData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGasDataIsMutable();
              gasData_.addAll(other.gasData_);
            }
            onChanged();
          }
        } else {
          if (!other.gasData_.isEmpty()) {
            if (gasDataBuilder_.isEmpty()) {
              gasDataBuilder_.dispose();
              gasDataBuilder_ = null;
              gasData_ = other.gasData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              gasDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGasDataFieldBuilder() : null;
            } else {
              gasDataBuilder_.addAllMessages(other.gasData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getGasDataCount(); i++) {
          if (!getGasData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GasDataBox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GasDataBox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .GasData gasData = 1;
      private java.util.List<GasData> gasData_ =
        java.util.Collections.emptyList();
      private void ensureGasDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          gasData_ = new java.util.ArrayList<GasData>(gasData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          GasData, GasData.Builder, GasDataOrBuilder> gasDataBuilder_;

      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public java.util.List<GasData> getGasDataList() {
        if (gasDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gasData_);
        } else {
          return gasDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public int getGasDataCount() {
        if (gasDataBuilder_ == null) {
          return gasData_.size();
        } else {
          return gasDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public GasData getGasData(int index) {
        if (gasDataBuilder_ == null) {
          return gasData_.get(index);
        } else {
          return gasDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder setGasData(
          int index, GasData value) {
        if (gasDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGasDataIsMutable();
          gasData_.set(index, value);
          onChanged();
        } else {
          gasDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder setGasData(
          int index, GasData.Builder builderForValue) {
        if (gasDataBuilder_ == null) {
          ensureGasDataIsMutable();
          gasData_.set(index, builderForValue.build());
          onChanged();
        } else {
          gasDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder addGasData(GasData value) {
        if (gasDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGasDataIsMutable();
          gasData_.add(value);
          onChanged();
        } else {
          gasDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder addGasData(
          int index, GasData value) {
        if (gasDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGasDataIsMutable();
          gasData_.add(index, value);
          onChanged();
        } else {
          gasDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder addGasData(
          GasData.Builder builderForValue) {
        if (gasDataBuilder_ == null) {
          ensureGasDataIsMutable();
          gasData_.add(builderForValue.build());
          onChanged();
        } else {
          gasDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder addGasData(
          int index, GasData.Builder builderForValue) {
        if (gasDataBuilder_ == null) {
          ensureGasDataIsMutable();
          gasData_.add(index, builderForValue.build());
          onChanged();
        } else {
          gasDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder addAllGasData(
          Iterable<? extends GasData> values) {
        if (gasDataBuilder_ == null) {
          ensureGasDataIsMutable();
          super.addAll(values, gasData_);
          onChanged();
        } else {
          gasDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder clearGasData() {
        if (gasDataBuilder_ == null) {
          gasData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          gasDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public Builder removeGasData(int index) {
        if (gasDataBuilder_ == null) {
          ensureGasDataIsMutable();
          gasData_.remove(index);
          onChanged();
        } else {
          gasDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public GasData.Builder getGasDataBuilder(
          int index) {
        return getGasDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public GasDataOrBuilder getGasDataOrBuilder(
          int index) {
        if (gasDataBuilder_ == null) {
          return gasData_.get(index);  } else {
          return gasDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public java.util.List<? extends GasDataOrBuilder>
           getGasDataOrBuilderList() {
        if (gasDataBuilder_ != null) {
          return gasDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gasData_);
        }
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public GasData.Builder addGasDataBuilder() {
        return getGasDataFieldBuilder().addBuilder(
            GasData.getDefaultInstance());
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public GasData.Builder addGasDataBuilder(
          int index) {
        return getGasDataFieldBuilder().addBuilder(
            index, GasData.getDefaultInstance());
      }
      /**
       * <code>repeated .GasData gasData = 1;</code>
       */
      public java.util.List<GasData.Builder>
           getGasDataBuilderList() {
        return getGasDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          GasData, GasData.Builder, GasDataOrBuilder>
          getGasDataFieldBuilder() {
        if (gasDataBuilder_ == null) {
          gasDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              GasData, GasData.Builder, GasDataOrBuilder>(
                  gasData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          gasData_ = null;
        }
        return gasDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GasDataBox)
    }

    static {
      defaultInstance = new GasDataBox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GasDataBox)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GasData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GasData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GasDataBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GasDataBox_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014GasMsg.proto\"r\n\007GasData\022\n\n\002id\030\001 \002(\005\022\020\n" +
      "\010pressure\030\002 \002(\002\022\016\n\006temper\030\003 \002(\002\022\r\n\005sFlow" +
      "\030\004 \002(\002\022\r\n\005wFlow\030\005 \002(\002\022\r\n\005aFlow\030\006 \002(\002\022\014\n\004" +
      "time\030\007 \002(\003\"\'\n\nGasDataBox\022\031\n\007gasData\030\001 \003(" +
      "\0132\010.GasData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GasData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GasData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GasData_descriptor,
              new String[] { "Id", "Pressure", "Temper", "SFlow", "WFlow", "AFlow", "Time", });
          internal_static_GasDataBox_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GasDataBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GasDataBox_descriptor,
              new String[] { "GasData", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
